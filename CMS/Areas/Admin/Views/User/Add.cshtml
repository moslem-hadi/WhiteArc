@model ViewModels.AddUserViewModel
@{
     
    string title = string.IsNullOrEmpty( Model.ID )? "ایجاد کاربر" : "ویرایش کاربر";
    ViewBag.Title = title;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
            {

    <div class="row ">
        <div class="col-sm-12">
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("میز کار", "index", "index")
                </li>
                <li>
                    @Html.ActionLink("لیست کاربرها", "index", "user")

                </li>
                <li class="active">
                    @title
                </li>
            </ol>

            <div id="sticky-anchor"></div>
            <div class="tobesticky" id="sticky">
                <div class="pull-left mainbtns">
                    
                    
                    <button type="submit" name="postType" value="save" class="btn btn-primary"><i class="fa fa-floppy-o delay"></i>ذخیــره</button>
               
                </div>

                <h4 class="page-title">
                    @title
                    <a href="@Url.Action("index","user")" class="innersmall"> لیست کاربرها</a>
                </h4>

            </div>
        </div>
    </div>

 

        <div class="row">
            <div class="col-sm-12">
                <div class="card-box  ">


                    @Html.AntiForgeryToken()

                    <div class="form-horizontal formhr">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger notifyjs-metro-base notifyjs-metro-error" })


                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control ltr" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control ltr" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                         
 

                    </div>



                </div>
            </div>
        </div>
}


