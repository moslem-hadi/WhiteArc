@model IEnumerable<DataLayer.Post>

@{
      string typeName = ViewBag.TypeName;
    string type  = ViewBag.Type;
    
    ViewBag.Title = $"لیست {typeName} ها";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-sm-12">

        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("میز کار", "index", "index")
            </li>
            <li class="active">
                لیست @typeName ها
            </li>
        </ol> 

        <div id="sticky-anchor"></div>
        <div class="tobesticky" id="sticky">
            <div class="pull-left mainbtns">
                <a href="/admin/@(type)group/" class="btn btn-dropbox waves-effect"><i class='fa fa-list'></i> دسته بندی ها</a>
                <a href="/admin/@type/add" class="btn btn-inverse waves-effect"><i class='fa fa-plus'></i> افزودن @typeName</a>
            </div>
                <h4 class="page-title">لیست @typeName ها</h4>
        </div>

    </div>
</div>




<div class="row">
    <div class="col-sm-12">
        <div class="k-rtl">


            @Html.AntiForgeryToken()

            <div class="dataloading"></div> 
            <div id="grid"></div>







        </div>
    </div>
</div>


 

@section Scripts {
   

    <script>

        $(function () {








            $("#grid").kendoGrid({

                scrollable: false,
                columns: [

                    {
                        field: "Title", title: 'عنوان ', template: "<div class='grid-photo leftrectangle'" +
                                    "style='background-image: url(\"#:data.Pic#\");'></div>#if(IsPublished == false) {# <i class='fa fa-eye-slash isfeatured' title='منتشر نشده'></i> #}#" +
                                "<div class='grid-title'><a  href='/news/#=ID#/#=Url#' target='_blank'>#: Title #</a></div>"
                    },
                    {
                        field: "RegDate", title: 'تاریخ درج', template: "<div class='text-center'>#= RegDate #</div>", width: 130
                    },
                    {
                         field: "LanguageID", title: 'زبان', template: "<div class='text-center'><img src='/Content/images/flags/#= LanguageID #.png'> </div>", width: 80
                    },
                    { field: "ViewCount", title: 'بازدید', width: 100, template: "<div class='text-center'>#=ViewCount#</div>" },
                    {
                        field: "", title: "تنظیمات", width: 90,
                        template: "<div class='text-center gridbtn'><a title=\"ویرایش رکورد\" href=\"/admin/@type/edit/#=ID#\"><i class=\"fa fa-edit\"></i></a><a title=\"حذف رکورد\" class=\"deleteconfirm\" onclick=\"deletePostRecord(#=ID#);\"  ><i class=\"fa fa-times\"></i></a></div>"
                    }


                ],
                editable: false, // enable editing

                pageable: {
                    pageSizes: [5, 10, 20, 50, 100],
                    messages: {
                        itemsPerPage: ""
                    }, buttonCount: 4
                },
                sortable: true,
                filterable: true,
                //toolbar: [
                //   {
                //       template: "<button type='button' data-price=\"0\" data-idtype=\"0\" data-title=\"مورد جدید\" data-namekala=\"\" data-idview=\"0\" data-idpk=\"0\" class='btn btn-default' style=\"margin-right:10px;\" value='مورد جدید' data-toggle=\"modal\" data-target=\"\\#exampleModal\" >مورد جدید</button>"
                //   }

                //], // specify toolbar commands
                dataSource: {
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true,
                    pageSize: 10,
                    schema: {
                        data: "Data",
                        total: "Total",
                        model: { // define the model of the data source. Required for validation and property types.
                            id: "ID",
                            fields: {
                                ID: { type: "number" },
                                Title: { type: "string" },
                                Url: { type: "string" },
                                ViewCount: { type: "number" }
                            }
                        }
                    },

                    batch: true, // enable batch editing - changes will be saved when the user clicks the "Save changes" button
                    transport: {
                        read: {
                            url: "@Url.Action("Listposts", "post",new { typeID =ViewBag.TypeCode})", //specify the URL which should return the records. This is the Read method of the HomeController.
                            contentType: "application/json",
                            type: "POST" //use HTTP POST request as by default GET is not allowed by ASP.NET MVC

                        },
                        parameterMap: function (data, operation) {
                            if (operation == "read") {
                                $('.dataloading').hide();
                                return JSON.stringify(data)
                            }
                        }
                    }
                }
            }); 

        });

    </script>
} 